version 1.0

workflow validation_vcf {
    input {
        ## Input VCF file to be validated
        File test_vcf
        
        ## Index file for the test VCF
        File test_index
        
        ## Reference VCF file used as a gold standard
        File reference_vcf
        
        ## Index file for the reference VCF
        File reference_index
        
        ## BED file defining the regions to be analyzed
        File reference_bed
        
        ## Reference genome FASTA file
        File reference_genome
        
        ## Index file for the reference genome
        File genome_index
        
        ## Folder where output files will be stored
        String output_folder
    }

    ## Call the validation task with the provided inputs
    call validate {
        input:
            test_vcf = test_vcf,
            test_index = test_index,
            reference_vcf = reference_vcf,
            reference_index = reference_index,
            reference_bed = reference_bed,
            reference_genome = reference_genome,
            genome_index = genome_index,
            output_folder = output_folder
    }

    output {
        ## Outputs from the validation task
        File validation_report = validate.validation_report           ## Summary report
        File validation_metrics = validate.validation_metrics         ## Metrics in JSON format
        File extended_summary = validate.extended_summary             ## Extended summary
        File roc_all = validate.roc_all                               ## ROC curve data for all variants
        File roc_indel_all = validate.roc_indel_all                   ## ROC curve data for all INDELs
        File roc_indel_pass = validate.roc_indel_pass                 ## ROC curve data for passed INDELs
        File roc_snp_all = validate.roc_snp_all                       ## ROC curve data for all SNPs
        File roc_snp_pass = validate.roc_snp_pass                     ## ROC curve data for passed SNPs
        File run_info = validate.run_info                             ## Run information in JSON format
        File passed_variants = validate.passed_variants               ## VCF with passed variants
        File passed_variants_index = validate.passed_variants_index   ## Index for the passed variants VCF
    }
}

task validate {
    input {
        ## Input files for validation
        File test_vcf
        File test_index
        File reference_genome
        File genome_index
        File reference_vcf
        File reference_index
        File reference_bed
        
        ## Folder for storing output files
        String output_folder
    }

    ## Base names derived from input VCF files for output file naming
    String test_base = basename(test_vcf, ".vcf")
    String ref_base = basename(reference_vcf, ".vcf")
    
    command <<<
        ## Create output directory
        mkdir -p ~{output_folder}

        ## Run hap.py for variant validation
        /opt/hap.py/bin/hap.py \
            ~{reference_vcf} \                 ## Reference VCF
            ~{test_vcf} \                      ## Test VCF
            -r ~{reference_genome} \           ## Reference genome
            --false-positives ~{reference_bed} \  ## BED file for filtering
            -o ~{output_folder}/~{test_base}.~{ref_base}  ## Output prefix
    >>>

    output {
        ## Capture all output files generated by hap.py
        File validation_report = "~{output_folder}/~{test_base}.~{ref_base}.summary.csv"
        File validation_metrics = "~{output_folder}/~{test_base}.~{ref_base}.metrics.json.gz"
        File extended_summary = "~{output_folder}/~{test_base}.~{ref_base}.extended.csv"
        File roc_all = "~{output_folder}/~{test_base}.~{ref_base}.roc.all.csv.gz"
        File roc_indel_all = "~{output_folder}/~{test_base}.~{ref_base}.roc.Locations.INDEL.csv.gz"
        File roc_indel_pass = "~{output_folder}/~{test_base}.~{ref_base}.roc.Locations.INDEL.PASS.csv.gz"
        File roc_snp_all = "~{output_folder}/~{test_base}.~{ref_base}.roc.Locations.SNP.csv.gz"
        File roc_snp_pass = "~{output_folder}/~{test_base}.~{ref_base}.roc.Locations.SNP.PASS.csv.gz"
        File run_info = "~{output_folder}/~{test_base}.~{ref_base}.runinfo.json"
        File passed_variants = "~{output_folder}/~{test_base}.~{ref_base}.vcf.gz"
        File passed_variants_index = "~{output_folder}/~{test_base}.~{ref_base}.vcf.gz.tbi"
    }

    runtime {
        ## Specify the Docker image to use
        docker: "us-central1-docker.pkg.dev/cool-benefit-817/guelph-internship/happy:0.3.15"
        
        ## Allocate resources for the task
        cpu: 8
        memory: "4 GB"
        disks: "local-disk 20 HDD"
        bootDiskSizeGb: 20
    }
}

